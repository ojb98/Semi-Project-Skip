<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.mapper.SkiReviewMapper">
	 
  <!-- 스키장 리뷰 insert -->
  <insert id="insert" parameterType="dto.SkiReviewDTO">
    insert into ski_reviews values(ski_review_seq.nextval,#{payment_id},#{uuid},#{ski_id},#{rating},#{review_comment},#{review_img, jdbcType=VARCHAR},sysdate)
  </insert>
  
  <!-- 스키장 별 리뷰 글 전체 갯수 -->
  <select id="getCount" parameterType="int"  resultType="int">
  	select nvl(count(review_id),0) cnt from ski_reviews where ski_id = #{ski_id}
  </select>
  
  <!-- 스키장 별 리뷰 기본 리스트 -->
  <select id="reviewList" parameterType="int" resultType="dto.SkiReviewDTO">
  	select s.review_id, s.uuid, u.user_id, s.created_at, s.rating, s.review_comment, s.review_img
  	from ski_reviews s left join users u
  	on s.uuid = u.uuid
  	where ski_id = #{ski_id}
  	order by ski_id desc
  </select>   
  
  <!-- 스키장 별 리뷰 리스트 (정렬 및 페이징) -->
  <select id="reviewArray" parameterType="map" resultType="dto.SkiReviewDTO">
	SELECT s.review_id, s.uuid, u.user_id, s.created_at, s.rating, s.review_comment, s.review_img 
  	FROM (
		select row_number() over(
			order by
			<choose>
				<when test="sortType == 'ratingDesc'">rating DESC</when>
				<when test="sortType == 'ratingAsc'">rating ASC</when>
				<otherwise>review_id DESC</otherwise>
			</choose>
			) AS rn, 
			review_id, uuid, created_at, rating, review_comment, review_img
		from ski_reviews where ski_id = #{ski_id}
	)s
	join users u on s.uuid = u.uuid
	where rn between #{startRow} and #{endRow}
  </select>
 
   
  <!-- 스키장 리뷰 수정시 조회 -->
  <select id="updateSelect" parameterType="int" resultType="dto.SkiReviewDTO">
  	select s.review_id, s.payment_id, s.uuid, u.user_id, s.ski_id, s.rating, s.review_comment, s.review_img, s.created_at 
  	from ski_reviews s left join users u
  	on s.uuid = u.uuid 
  	where review_id=#{review_id}
  </select>
  
  <!-- 스키장 리뷰 수정 -->
  <update id="update" parameterType="dto.SkiReviewDTO">
  	update ski_reviews set rating=#{rating}, review_comment=#{review_comment}, review_img=#{review_img} where review_id = #{review_id}
  </update>
  
  <!-- 스키장 리뷰 삭제 -->
  <delete id="delete" parameterType="int">
  	delete from ski_reviews where review_id=#{review_id}
  </delete>
</mapper>
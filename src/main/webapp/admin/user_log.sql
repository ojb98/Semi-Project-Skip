CREATE TABLE USER_LOG(
    IP VARCHAR2(40) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    CONSTRAINT USER_LOG_PK PRIMARY KEY(IP, CREATED_AT)
);

CREATE TABLE USER_LOG_COUNT(
    LOG_DATE DATE NOT NULL,
    LOG_COUNT NUMBER NOT NULL,
    UNIQUE_LOG_COUNT NUMBER NOT NULL
);


CREATE OR REPLACE PROCEDURE INSERT_AND_TRUNCATE_USER_LOG
IS
    LOG_COUNT NUMBER;
    UNIQUE_LOG_COUNT NUMBER;
BEGIN
    SELECT COUNT(*), COUNT(DISTINCT IP) INTO LOG_COUNT, UNIQUE_LOG_COUNT
    FROM USER_LOG;
        
    INSERT INTO USER_LOG_COUNT VALUES(TRUNC(SYSTIMESTAMP, 'DD') - INTERVAL '1' DAY, LOG_COUNT, UNIQUE_LOG_COUNT);
    EXECUTE IMMEDIATE 'TRUNCATE TABLE USER_LOG';
END;
/


BEGIN
    DBMS_SCHEDULER.DROP_JOB('USER_LOG_SCHEDULER');
END;
/


BEGIN
    DBMS_SCHEDULER.CREATE_JOB(
        JOB_NAME => 'USER_LOG_SCHEDULER',
        JOB_TYPE => 'STORED_PROCEDURE',
        JOB_ACTION => 'INSERT_AND_TRUNCATE_USER_LOG',
        START_DATE => STRUNC(SYSTIMESTAMP, 'DD') + INTERVAL '1' DAY,
        REPEAT_INTERVAL => 'FREQ=DAILY; INTERVAL=1',
        ENABLED => TRUE
    );
END;
/
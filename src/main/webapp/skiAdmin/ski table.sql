CREATE TABLE SKI (
    SKI_ID NUMBER NOT NULL,  -- 스키장 아이디 (PK)
    UUID NUMBER NOT NULL,  -- 관리자 UUID (관리자 계정과 연결)
    NAME VARCHAR2(100)  NOT NULL,  -- 스키장 이름
    LOCATION VARCHAR2(200)  NOT NULL,  -- 위치
    WEBCAM_URL VARCHAR2(300)  NULL,      -- 웹캠 URL
    CONSTRAINT PK_SKI PRIMARY KEY (SKI_ID),
    CONSTRAINT UUID FOREIGN KEY (UUID) REFERENCES USERS (UUID) ON DELETE CASCADE
);

CREATE TABLE SKI_RESERVATION (
    SKI_RESERV_ID NUMBER NOT NULL,  -- 예약 아이디 (PK)
    SKI_ID NUMBER NOT NULL,  -- 스키장 아이디 (FK)
    UUID NUMBER NOT NULL,  -- 회원 UUID
    RESERV_DATE DATE NOT NULL,  -- 예약 날짜
    TOTAL_PRICE NUMBER(10,2) NULL,  -- 총 가격
    STATUS VARCHAR2(20) NOT NULL CHECK (STATUS IN ('CONFIRMED', 'CANCELLED', 'COMPLETED')), -- 예약 상태
    CREATED_AT DATE DEFAULT SYSDATE NOT NULL, -- 예약 생성일 (SYSDATE 사용)
    
    CONSTRAINT PK_SKI_RESERVATION PRIMARY KEY (SKI_RESERV_ID),
    CONSTRAINT FK_SKI_RESERVATION_SKI FOREIGN KEY (SKI_ID) REFERENCES SKI (SKI_ID) ON DELETE CASCADE,
    CONSTRAINT FK_SKI_RESERVATION_USER FOREIGN KEY (UUID) REFERENCES USERS (UUID) ON DELETE CASCADE
);

CREATE TABLE SKI_ITEM (
    ITEM_ID NUMBER NOT NULL,  -- 장비 아이디 (PK)
    CATEGORY_ID NUMBER NOT NULL,  -- 카테고리 아이디 (FK)
    SKI_ID NUMBER NOT NULL,  -- 스키장 아이디 (FK)
    ITEM_NAME VARCHAR2(50) NOT NULL,
    ITEM_DETAIL VARCHAR2(100) NULL,      -- 장비 상세 정보
    TOTAL_QUANTITY NUMBER NOT NULL,  -- 총 장비 수량
    ITEM_IMG VARCHAR2(255) NOT NULL,
    CREATED_AT DATE NOT NULL,  -- 등록일
    CONSTRAINT PK_SKI_ITEM PRIMARY KEY (ITEM_ID),
    CONSTRAINT FK_SKI_ITEM_SKI FOREIGN KEY (SKI_ID) REFERENCES SKI (SKI_ID)
);

CREATE TABLE SKI_PAYMENTS (
    PAYMENT_ID NUMBER NOT NULL,  -- 결제 아이디 (PK)
    SKI_RESERV_ID NUMBER NOT NULL,  -- 스키장 예약 아이디 (FK)
    UUID NUMBER NOT NULL,  -- 회원 UUID
    TOTAL_PRICE NUMBER(10,2) NOT NULL,  -- 결제 금액
    PAYMENT_METHOD VARCHAR2(20) NOT NULL CHECK (PAYMENT_METHOD IN ('CARD', 'KAKAOPAY', 'NAVERPAY')), -- 결제 방식
    STATUS VARCHAR2(20) NOT NULL CHECK (STATUS IN ('결제완료', '결제취소')), -- 결제 상태
    IMP_UID VARCHAR2(50),    -- 포트원고유아이디
    CARD_NUM VARCHAR2(50),      -- 카드번호
    CARD_NAME VARCHAR2(25),      -- 카드사(이름)
    CREATED_AT DATE DEFAULT SYSDATE NOT NULL , -- 결제 날짜
    
    CONSTRAINT PK_SKI_PAYMENTS PRIMARY KEY (PAYMENT_ID), 
    CONSTRAINT FK_SKI_PAYMENTS_RESERV FOREIGN KEY (SKI_RESERV_ID) REFERENCES SKI_RESERVATION (SKI_RESERV_ID) ON DELETE CASCADE,
    CONSTRAINT FK_SKI_PAYMENTS_USER FOREIGN KEY (UUID) REFERENCES USERS (UUID) ON DELETE CASCADE
);

CREATE TABLE SKI_REVIEWS (
    REVIEW_ID      NUMBER         NOT NULL,  -- 리뷰 아이디 (PK)
    PAYMENT_ID     NUMBER         NOT NULL,  -- 결제 아이디 (FK)
    UUID           NUMBER         NOT NULL,  -- 회원 UUID
    SKI_ID         NUMBER         NOT NULL,  -- 스키장 아이디 (FK)
    RATING         NUMBER(3,1)    NOT NULL,  -- 리뷰 평점 (0~5점, 소수 1자리까지)
    REVIEW_COMMENT VARCHAR2(1000),           -- 리뷰 내용 (COMMENT → REVIEW_COMMENT로 변경)
    REVIEW_IMG     VARCHAR2(255),            -- 리뷰 이미지
    CREATED_AT     DATE DEFAULT SYSDATE,     -- 리뷰 작성일 (자동 입력)
    
    CONSTRAINT PK_SKI_REVIEWS PRIMARY KEY (REVIEW_ID),
    CONSTRAINT FK_SKI_REVIEWS_PAYMENT FOREIGN KEY (PAYMENT_ID) REFERENCES SKI_PAYMENTS (PAYMENT_ID) ON DELETE CASCADE,
    CONSTRAINT FK_SKI_REVIEWS_USER FOREIGN KEY (UUID) REFERENCES USERS (UUID) ON DELETE CASCADE,
    CONSTRAINT FK_SKI_REVIEWS_SKI FOREIGN KEY (SKI_ID) REFERENCES SKI (SKI_ID) ON DELETE CASCADE,
    CONSTRAINT CHK_REVIEW_RATING CHECK (RATING BETWEEN 0 AND 5)
);

CREATE TABLE ITEM_CATEGORY (
    CATEGORY_ID NUMBER PRIMARY KEY,
    ITEM_TYPE VARCHAR2(100) NOT NULL CHECK (ITEM_TYPE IN ('스키', '스노우보드', '스키복', '보호장구', '리프트권')),
    PRICE_PER_HOUR NUMBER
);

CREATE TABLE SKI_RESERVATION_ITEM (
    SKI_ITEM_ID NUMBER PRIMARY KEY,
    SKI_RESERV_ID NUMBER NOT NULL,
    ITEM_ID NUMBER NOT NULL,
    QUANTITY NUMBER NOT NULL,
    SUBTOTAL_PRICE NUMBER(10,2),
    FOREIGN KEY (SKI_RESERV_ID) REFERENCES SKI_RESERVATION(SKI_RESERV_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES SKI_ITEM(ITEM_ID)
);


INSERT INTO SKI_RESERVATION_ITEM VALUES (1, 201, 1, 2, 10000);
INSERT INTO SKI_RESERVATION_ITEM VALUES (2, 201, 2, 1, 6000);
INSERT INTO SKI_RESERVATION_ITEM VALUES (3, 202, 3, 3, 9000);
INSERT INTO SKI_RESERVATION_ITEM VALUES (4, 202, 4, 1, 2000);
drop table ski_reviews;
select * from ski_item;
select * from users where role='USER';

INSERT INTO ITEM_CATEGORY VALUES (1, '스키', 5000);
INSERT INTO ITEM_CATEGORY VALUES (2, '스노우보드', 6000);
INSERT INTO ITEM_CATEGORY VALUES (3, '스키복', 3000);
INSERT INTO ITEM_CATEGORY VALUES (4, '보호장구', 2000);
INSERT INTO ITEM_CATEGORY VALUES (5, '리프트권', 8000);
INSERT INTO ITEM_CATEGORY VALUES (6, '스키', 5500);
INSERT INTO ITEM_CATEGORY VALUES (7, '스노우보드', 6500);
INSERT INTO ITEM_CATEGORY VALUES (8, '스키복', 3500);
INSERT INTO ITEM_CATEGORY VALUES (9, '보호장구', 2500);
INSERT INTO ITEM_CATEGORY VALUES (10, '리프트권',10000);

INSERT INTO SKI_ITEM VALUES (1, 1, 1, '고급 스키', '최신형 스키 장비', 10, 'ski1.jpg', SYSDATE);
INSERT INTO SKI_ITEM VALUES (2, 2, 1, '스노우보드 A', '초보자용 보드', 8, 'snowboard1.jpg', SYSDATE);
INSERT INTO SKI_ITEM VALUES (3, 3, 1, '스키복 남성', '방수 기능', 15, 'skiwear1.jpg', SYSDATE);
INSERT INTO SKI_ITEM VALUES (4, 4, 1, '헬멧', '안전 보호 장비', 20, 'helmet1.jpg', SYSDATE);
INSERT INTO SKI_ITEM VALUES (5, 5, 1, '리프트권', '전일 이용권', 50, 'lift1.jpg', SYSDATE);
INSERT INTO SKI_ITEM VALUES (6, 1, 1, '중급 스키', '중급자용 스키', 12, 'ski2.jpg', SYSDATE);
INSERT INTO SKI_ITEM VALUES (7, 2, 1, '스노우보드 B', '고급 보드', 7, 'snowboard2.jpg', SYSDATE);
INSERT INTO SKI_ITEM VALUES (8, 3, 1, '스키복 여성', '고급 방수 기능', 18, 'skiwear2.jpg', SYSDATE);
INSERT INTO SKI_ITEM VALUES (9, 4, 1, '고급 헬멧', '충격 흡수 기능', 10, 'helmet2.jpg', SYSDATE);
INSERT INTO SKI_ITEM VALUES (10, 5, 1, '리프트권', '반일 이용권', 30, 'lift2.jpg', SYSDATE);



INSERT INTO SKI (SKI_ID, UUID, NAME, LOCATION, WEBCAM_UR) VALUES 
(1, 6, '강원 스키장', '강원도 평창군', 'http://webcam1.com');

INSERT INTO SKI (SKI_ID, UUID, NAME, LOCATION, WEBCAM_UR) VALUES 
(2, 8, '용평 리조트', '강원도 정선군', 'http://webcam2.com');

INSERT INTO SKI (SKI_ID, UUID, NAME, LOCATION, WEBCAM_UR) VALUES 
(3, 15, '무주 덕유산', '전라북도 무주군', 'http://webcam3.com');

INSERT INTO SKI (SKI_ID, UUID, NAME, LOCATION, WEBCAM_UR) VALUES 
(4, 16, '하이원 스키장', '강원도 태백시', 'http://webcam4.com');

INSERT INTO SKI (SKI_ID, UUID, NAME, LOCATION, WEBCAM_UR) VALUES 
(5, 21, '지산 포레스트', '경기도 이천시', 'http://webcam5.com');

COMMIT;

INSERT INTO SKI_RESERVATION (SKI_RESERV_ID, SKI_ID, UUID, RESERV_DATE, TOTAL_PRICE, STATUS, CREATED_AT) 
VALUES (1, 1, 2, TO_DATE('2024-12-20', 'YYYY-MM-DD'), 150000, 'CONFIRMED', SYSDATE);

INSERT INTO SKI_RESERVATION (SKI_RESERV_ID, SKI_ID, UUID, RESERV_DATE, TOTAL_PRICE, STATUS, CREATED_AT) 
VALUES (2, 2, 4, TO_DATE('2024-12-22', 'YYYY-MM-DD'), 180000, 'CONFIRMED', SYSDATE);

INSERT INTO SKI_RESERVATION (SKI_RESERV_ID, SKI_ID, UUID, RESERV_DATE, TOTAL_PRICE, STATUS, CREATED_AT) 
VALUES (3, 3, 9, TO_DATE('2024-12-24', 'YYYY-MM-DD'), 130000, 'CANCELLED', SYSDATE);

INSERT INTO SKI_RESERVATION (SKI_RESERV_ID, SKI_ID, UUID, RESERV_DATE, TOTAL_PRICE, STATUS, CREATED_AT) 
VALUES (4, 4, 2, TO_DATE('2024-12-26', 'YYYY-MM-DD'), 200000, 'COMPLETED', SYSDATE);

INSERT INTO SKI_RESERVATION (SKI_RESERV_ID, SKI_ID, UUID, RESERV_DATE, TOTAL_PRICE, STATUS, CREATED_AT) 
VALUES (5, 5, 2, TO_DATE('2024-12-28', 'YYYY-MM-DD'), 170000, 'CONFIRMED', SYSDATE);

COMMIT;

select * from ski_reservation;


SELECT 
            sr.ski_reserv_id, 
            sr.ski_id, 
            sr.uuid, 
            sr.reserv_date,
            sr.total_price, 
            sr.status, 
            sr.created_at,
            s.name AS ski_name, 
            u.name AS user_name,
            u.user_id, 
		    u.email AS user_email, 
		    u.phone,
            sp.payment_id, 
            sri.ski_item_id, 
            sri.item_id, 
            si.item_name,
            si.category_id,
            sri.quantity, 
            sri.subtotal_price
        FROM ski_reservation sr
        LEFT JOIN ski s ON sr.ski_id = s.ski_id
        LEFT JOIN ski_payments sp ON sr.ski_reserv_id = sp.ski_reserv_id
        LEFT JOIN ski_reservation_item sri ON sr.ski_reserv_id = sri.ski_reserv_id
        LEFT JOIN ski_item si ON sri.item_id = si.item_id
        LEFT JOIN users u ON sr.uuid = u.uuid
        where sr.ski_id = 1;
        
        select * from ski_item;
        select * from ski_reservation_item;
        select * from ski_reservation;
INSERT INTO SKI_RESERVATION_ITEM 
    (SKI_ITEM_ID, SKI_RESERV_ID, ITEM_ID, QUANTITY, SUBTOTAL_PRICE)
VALUES
(14, 1010, 6, 2, 500);

CREATE TABLE QNA (
    QNA_ID      NUMBER         NOT NULL,
    UUID        NUMBER         NOT NULL,
    CATEGORY    VARCHAR2(20)   NOT NULL 
        CHECK (CATEGORY IN ('SKI','RENTAL','RESORT')),
    REF_ID      NUMBER         NOT NULL,
    TITLE       VARCHAR2(50)   NOT NULL,
    CONTENT     VARCHAR2(200)  NOT NULL,
    STATUS      VARCHAR2(15)   NOT NULL 
        CHECK (STATUS IN ('CHECKING','COMPLETE')),
    CREATED_AT  DATE           NOT NULL,
    CONSTRAINT PK_QNA PRIMARY KEY (QNA_ID)
);

INSERT ALL
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (1, 100, 'SKI', 1, '스키장 문의 1', '스키장 관련 문의 내용 1', 'CHECKING', TO_DATE('2025-03-01','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (2, 101, 'SKI', 1, '스키장 문의 2', '스키장 관련 문의 내용 2', 'CHECKING', TO_DATE('2025-03-02','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (3, 102, 'SKI', 1, '스키장 문의 3', '스키장 관련 문의 내용 3', 'CHECKING', TO_DATE('2025-03-03','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (4, 103, 'SKI', 1, '스키장 문의 4', '스키장 관련 문의 내용 4', 'CHECKING', TO_DATE('2025-03-04','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (5, 104, 'SKI', 1, '스키장 문의 5', '스키장 관련 문의 내용 5', 'CHECKING', TO_DATE('2025-03-05','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (6, 105, 'SKI', 1, '스키장 문의 6', '스키장 관련 문의 내용 6', 'CHECKING', TO_DATE('2025-03-06','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (7, 106, 'SKI', 1, '스키장 문의 7', '스키장 관련 문의 내용 7', 'CHECKING', TO_DATE('2025-03-07','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (8, 107, 'SKI', 1, '스키장 문의 8', '스키장 관련 문의 내용 8', 'CHECKING', TO_DATE('2025-03-08','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (9, 108, 'SKI', 1, '스키장 문의 9', '스키장 관련 문의 내용 9', 'CHECKING', TO_DATE('2025-03-09','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (10, 109, 'SKI', 1, '스키장 문의 10', '스키장 관련 문의 내용 10', 'CHECKING', TO_DATE('2025-03-10','YYYY-MM-DD'))

  -- 이하 10개는 STATUS를 COMPLETE로 설정
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (11, 110, 'SKI', 1, '스키장 문의 11', '스키장 관련 문의 내용 11', 'COMPLETE', TO_DATE('2025-03-11','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (12, 111, 'SKI', 1, '스키장 문의 12', '스키장 관련 문의 내용 12', 'COMPLETE', TO_DATE('2025-03-12','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (13, 112, 'SKI', 1, '스키장 문의 13', '스키장 관련 문의 내용 13', 'COMPLETE', TO_DATE('2025-03-13','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (14, 113, 'SKI', 1, '스키장 문의 14', '스키장 관련 문의 내용 14', 'COMPLETE', TO_DATE('2025-03-14','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (15, 114, 'SKI', 1, '스키장 문의 15', '스키장 관련 문의 내용 15', 'COMPLETE', TO_DATE('2025-03-15','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (16, 115, 'SKI', 1, '스키장 문의 16', '스키장 관련 문의 내용 16', 'COMPLETE', TO_DATE('2025-03-16','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (17, 116, 'SKI', 1, '스키장 문의 17', '스키장 관련 문의 내용 17', 'COMPLETE', TO_DATE('2025-03-17','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (18, 117, 'SKI', 1, '스키장 문의 18', '스키장 관련 문의 내용 18', 'COMPLETE', TO_DATE('2025-03-18','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (19, 118, 'SKI', 1, '스키장 문의 19', '스키장 관련 문의 내용 19', 'COMPLETE', TO_DATE('2025-03-19','YYYY-MM-DD'))
  INTO QNA (QNA_ID, UUID, CATEGORY, REF_ID, TITLE, CONTENT, STATUS, CREATED_AT)
    VALUES (20, 119, 'SKI', 1, '스키장 문의 20', '스키장 관련 문의 내용 20', 'COMPLETE', TO_DATE('2025-03-20','YYYY-MM-DD'))
SELECT 1 FROM DUAL;
commit;